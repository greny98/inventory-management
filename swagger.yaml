swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"

tags:
  - name: customers
  - name: distributors
  - name: categories
  - name: products
  - name: inventories

paths:
  # =========================================[Customers]=======================================================
  /customers:
    # [GET] All customers
    get:
      tags:
        - customers
      parameters:
        - in: query
          name: page
          type: integer
      summary: List all customers
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  customers:
                    type: array
                    items:
                      type: object
                      $ref: '#/definitions/customer'
    # [POST] Create customer
    post:
      tags:
        - customers
      summary: Add Customer
      parameters:
        - name: body
          in: body
          description: Customer Data
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              phone:
                type: string
              address:
                type: string
      responses:
        201:
          description: 'Created'
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/customer'
              message:
                type: string
  # =========================================[Distributor]=======================================================
  /distributors:
    # [GET] All distributors
    get:
      tags:
        - distributors
      parameters:
        - in: query
          name: page
          type: integer
      summary: List all distributors
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  distributors:
                    type: array
                    items:
                      type: object
                      $ref: '#/definitions/distributor'
    # [POST] Create distributor
    post:
      tags:
        - distributors
      summary: Add Distributor
      parameters:
        - name: body
          in: body
          description: Distributor Data
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              phone:
                type: string
              address:
                type: string
      responses:
        201:
          description: 'Created'
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/distributor'
              message:
                type: string

  # =========================================[Categories]=======================================================
  /categories:
    # [GET] All categories
    get:
      tags:
        - categories
      parameters:
        - in: query
          name: page
          type: integer
      summary: List all categories
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    categories:
                      type: array
                      items:
                        type: object
                        $ref: '#/definitions/category'
    # [POST]
    post:
      tags:
        - categories
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
      summary: Create new category
      responses:
        201:
          description: 'Created'
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/category'
              message:
                type: string
  # =========================================[Products]=======================================================
  /products:
    # [GET] All products
    get:
      tags:
        - products
      parameters:
        - in: query
          name: page
          type: integer
      summary: List all products
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      $ref: '#/definitions/product'
    # [POST]
    post:
      tags:
        - products
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
              categoryId:
                type: integer
              purchasePrice:
                type: number
              price:
                type: number
              image:
                type: string
      summary: Create new product
      responses:
        201:
          description: 'Created'
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/product'
              message:
                type: string
  # =========================================[Inventories]=======================================================
  /inventories:
    # [GET] All inventories
    get:
      tags:
        - inventories
      summary: List all inventories
      parameters:
        - name: page
          type: integer
          in: query
      responses:
        200:
          description: 'OK'
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  inventories:
                    type: array
                    items:
                      type: object
                      $ref: '#/definitions/inventory'
    post:
      tags:
        - inventories
      summary: Create new inventory
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              productId:
                type: integer
              quantity:
                type: integer
      responses:
        200:
          description: 'Created'
          schema:
            $ref: '#/definitions/category'

# definitions
definitions:
  customer:
    type: object
    required:
      - name
      - phone
      - address
    properties:
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      address:
        type: string
  distributor:
    type: object
    required:
      - name
      - phone
      - address
    properties:
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      address:
        type: string
      createdAt:
        type: string
        format: date-time
  category:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
  product:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      category:
        type: object
        $ref: '#/definitions/category'
      purchasePrice:
        type: number
      price:
        type: number
      image:
        type: string
  inventory:
    type: object
    properties:
      id:
        type: integer
      productId:
        type: integer
      quantity:
        type: integer
      lastUpdatedAt:
        type: string
        format: date-time

schemes:
  - https
  - http
